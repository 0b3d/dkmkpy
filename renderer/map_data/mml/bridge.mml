{
  "interactivity": false,
  "Layer": [
    {
      "name": "ocean-lz",
      "srs-name": "900913",
      "geometry": "polygon",
      "class": "ocean",
      "id": "ocean-lz",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "shape",
        "file": "data/simplified-water-polygons-complete-3857/simplified_water_polygons.shp"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "maxzoom": 9
      },
      "advanced": {}
    },
    {
      "name": "ocean",
      "srs-name": "900913",
      "geometry": "polygon",
      "class": "ocean",
      "id": "ocean",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "type": "shape",
        "file": "data/water-polygons-split-3857/water_polygons.shp"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "minzoom": 10
      },
      "advanced": {}
    },
    {
      "name": "builtup",
      "srs-name": "mercator",
      "geometry": "polygon",
      "class": "",
      "id": "builtup",
      "srs": "+proj=merc +datum=WGS84 +over",
      "Datasource": {
        "type": "shape",
        "file": "data/world_boundaries/builtup_area.shp"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "maxzoom": 9,
        "minzoom": 8
      },
      "advanced": {}
    },
    {
      "name": "necountries",
      "srs-name": "WGS84",
      "geometry": "linestring",
      "class": "",
      "id": "necountries",
      "srs": "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
      "Datasource": {
        "type": "shape",
        "file": "data/ne_110m_admin_0_boundary_lines_land/ne_110m_admin_0_boundary_lines_land.shp"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "maxzoom": 3,
        "minzoom": 1
      },
      "advanced": {}
    },
        {
      "name": "bridge",
      "srs-name": "900913",
      "geometry": "polygon",
      "class": "",
      "id": "bridge",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    way_area/NULLIF(!pixel_width!::real*!pixel_height!::real,0) AS way_pixels,\n    man_made,\n    name\n  FROM planet_osm_polygon\n  WHERE man_made = 'bridge'\n) AS bridge",
        "geometry_field": "way",
        "type": "postgis",
        "key_field": "",
        "dbname": "gis"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "minzoom": 12
      },
      "advanced": {}
    },
        {
      "name": "waterway-bridges",
      "srs-name": "900913",
      "geometry": "linestring",
      "class": "water-lines",
      "id": "waterway-bridges",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT\n    way,\n    waterway,\n    name,\n    intermittent,\n    CASE WHEN tunnel IN ('yes', 'culvert') THEN 'yes' ELSE 'no' END AS int_tunnel,\n    'yes' AS bridge\n  FROM planet_osm_line\n  WHERE waterway IN ('river', 'canal', 'derelict_canal', 'stream', 'drain', 'ditch', 'wadi')\n    AND bridge IN ('yes', 'aqueduct')\n  ORDER BY z_order\n) AS waterway_bridges",
        "geometry_field": "way",
        "type": "postgis",
        "key_field": "",
        "dbname": "gis"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "minzoom": 15
      },
      "advanced": {}
    },
        {
      "name": "tunnels",
      "srs-name": "900913",
      "geometry": "linestring",
      "class": "tunnels-fill tunnels-casing access directions",
      "id": "tunnels",
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "Datasource": {
        "extent": "-20037508,-20037508,20037508,20037508",
        "table": "(SELECT way, (CASE WHEN substr(feature, length(feature)-3, 4) = 'link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n        horse, foot, bicycle, tracktype, int_surface, access, construction,\n        service, oneway, link, layernotnull\n  FROM ( -- subselect that contains both roads and rail/aero\n    SELECT\n        way,\n        ('highway_' || highway) AS feature, --only motorway to tertiary links are accepted later on\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', \n                              'grass_paver', 'gravel', 'ground', 'mud', 'pebblestone', 'salt', 'sand', 'woodchips', 'clay') THEN 'unpaved' ELSE \n          CASE WHEN surface IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes', \n                                'concrete:plates', 'paving_stones', 'metal', 'wood') THEN 'paved' \n          ELSE null END END AS int_surface,\n        CASE WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE\n          WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n          WHEN oneway IN ('yes', '-1') THEN oneway\n          WHEN junction IN ('roundabout') AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'\n          ELSE NULL\n        END AS oneway,\n        CASE\n          WHEN substr(highway, length(highway)-3, 4) = 'link' THEN 'yes'\n          ELSE 'no'\n        END AS link,\n        CASE WHEN layer~E'^-?\\\\d+$' AND length(layer)<10 THEN layer::integer ELSE 0 END AS layernotnull\n      FROM planet_osm_line\n      WHERE (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\n        AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n        COALESCE(\n          ('railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text \n                               WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'  \n                               WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service' ELSE railway END)),\n          ('aeroway_' || aeroway)\n        ) AS feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n        'null',\n        CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n          ELSE NULL\n        END AS access,\n        construction,\n        CASE WHEN service IN ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text END AS service,\n        NULL AS oneway,\n        'no' AS link,\n        CASE WHEN layer~E'^-?\\\\d+$' AND length(layer)<10 THEN layer::integer ELSE 0 END AS layernotnull\n      FROM planet_osm_line\n      WHERE (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\n        AND (railway IS NOT NULL OR aeroway IS NOT NULL) -- end of rail/aero select\n    ) AS features\n  JOIN (VALUES -- this join is also putting a condition on what is selected. features not matching it do not make it into the results.\n      ('railway_rail', 440),\n      ('railway_INT-preserved-ssy', 430),\n      ('railway_INT-spur-siding-yard', 430),\n      ('railway_subway', 420),\n      ('railway_narrow_gauge', 420),\n      ('railway_light_rail', 420),\n      ('railway_preserved', 420),\n      ('railway_funicular', 420),\n      ('railway_monorail', 420),\n      ('railway_miniature', 420),\n      ('railway_turntable', 420),\n      ('railway_tram', 410),\n      ('railway_tram-service', 405),\n      ('railway_disused', 400),\n      ('railway_construction', 400),\n      ('highway_motorway', 380),\n      ('highway_trunk', 370),\n      ('highway_primary', 360),\n      ('highway_secondary', 350),\n      ('highway_tertiary', 340),\n      ('highway_residential', 330),\n      ('highway_unclassified', 330),\n      ('highway_road', 330),\n      ('highway_living_street', 320),\n      ('highway_pedestrian', 310),\n      ('highway_raceway', 300),\n      ('highway_motorway_link', 240),\n      ('highway_trunk_link', 230),\n      ('highway_primary_link', 220),\n      ('highway_secondary_link', 210),\n      ('highway_tertiary_link', 200),\n      ('highway_service', 150),\n      ('highway_track', 110),\n      ('highway_path', 100),\n      ('highway_footway', 100),\n      ('highway_bridleway', 100),\n      ('highway_cycleway', 100),\n      ('highway_steps', 100),\n      ('highway_platform', 90),\n      ('railway_platform', 90),\n      ('aeroway_runway', 60),\n      ('aeroway_taxiway', 50),\n      ('highway_construction', 10)\n    ) AS ordertable (feature, prio)\n    USING (feature)\n  ORDER BY\n    layernotnull,\n    prio,\n    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END\n) AS tunnels",
        "geometry_field": "way",
        "type": "postgis",
        "key_field": "",
        "dbname": "gis"
      },
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "properties": {
        "group-by": "layernotnull",
        "minzoom": 9
      },
      "advanced": {}
    }
  ],
  "scale": 1,
  "center": [
    0,
    0,
    4
  ],
  "format": "png",
  "_parts": {
    "extents": {
      "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "900913"
    },
    "osm2pgsql": {
      "geometry_field": "way",
      "type": "postgis",
      "dbname": "gis",
      "extent": "-20037508,-20037508,20037508,20037508",
      "key_field": ""
    },
    "extents84": {
      "srs": "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs",
      "extent": [
        -180,
        -85.05112877980659,
        180,
        85.05112877980659
      ],
      "srs-name": "WGS84"
    }
  },
  "metatile": 2,
  "bounds": [
    -180,
    -85.05112877980659,
    180,
    85.05112877980659
  ],
  "name": "OpenStreetMap Carto",
  "srs": "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over",
  "Stylesheet": [
    "style.mss",
    "shapefiles.mss",
    "landcover.mss",
    "water.mss",
    "water-features.mss",
    "roads.mss",
    "power.mss",
    "citywalls.mss",
    "placenames.mss",
    "buildings.mss",
    "stations.mss",
    "amenity-points.mss",
    "ferry-routes.mss",
    "aerialways.mss",
    "admin.mss",
    "addressing.mss"
  ],
  "minzoom": 0,
  "maxzoom": 22,
  "description": "A faithful reimplementation of the standard OpenStreetMap style"
}
